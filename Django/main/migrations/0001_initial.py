# Generated by Django 3.2.5 on 2021-09-16 11:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_building', models.CharField(max_length=50, verbose_name='Наименование')),
                ('year_build', models.DateField(max_length=50, verbose_name='Год постройки')),
                ('number_of_storeys', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Этажность')),
                ('total_area', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Общая площадь')),
                ('construction_volume', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Строительный объём')),
                ('commissioning_year', models.DateField(max_length=50, verbose_name='Год ввода в эксплуатацию')),
                ('date_of_last_examination', models.CharField(max_length=50, verbose_name='Дата последней экспертизы')),
                ('conclusion', models.CharField(max_length=50, verbose_name='Заключение')),
                ('wear_percentage', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Процент износа')),
                ('building_structure_type', models.CharField(max_length=50, verbose_name='Тип конструкции здания')),
            ],
            options={
                'verbose_name': 'Паспорт здания',
                'verbose_name_plural': 'Паспорта зданий',
            },
        ),
        migrations.CreateModel(
            name='AddSteamShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_steam_shop', models.CharField(max_length=50, verbose_name='Наименование котельной')),
                ('street', models.CharField(max_length=50, verbose_name='Улица')),
                ('locality', models.CharField(max_length=50, verbose_name='Населенный пункт')),
                ('district', models.CharField(max_length=50, verbose_name='Район')),
                ('region', models.CharField(max_length=50, verbose_name='Область')),
                ('code', models.CharField(max_length=50, verbose_name='Код')),
                ('attachment', models.CharField(max_length=50, verbose_name='Принадлежность')),
            ],
            options={
                'verbose_name': 'Паспорт котельной',
                'verbose_name_plural': 'Паспорта котельных',
            },
        ),
        migrations.CreateModel(
            name='ManagingOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название управляющей организации')),
            ],
            options={
                'verbose_name': 'Управляющая организация',
                'verbose_name_plural': 'Управляющие организации',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('title', models.CharField(max_length=50, verbose_name='Заголовок')),
                ('description', models.CharField(max_length=250, verbose_name='Описание')),
                ('text', models.TextField(verbose_name='Текст')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фотография')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ссылка на статью')),
                ('author', models.CharField(blank=True, max_length=50, null=True, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Новости',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='TarifBuild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manage_org', models.CharField(max_length=30, verbose_name='Управляющая организация')),
                ('adress', models.CharField(max_length=100, verbose_name='Адрес')),
                ('tarif', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), size=None, verbose_name='Тариф')),
                ('sum', models.DecimalField(decimal_places=20, max_digits=30, verbose_name='Сумма')),
                ('tarifGen', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Тариф за 1 кв.м')),
                ('square', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Площадь')),
            ],
            options={
                'verbose_name': 'Тарифы зданий',
                'verbose_name_plural': 'Тарифы зданий',
            },
        ),
        migrations.CreateModel(
            name='TarifPay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=50, verbose_name='Город/район')),
                ('deductions_for_maintenance_of_structural_elements_of_buildings_base_rate', models.DecimalField(db_column='deductions_for_maintenance', decimal_places=5, max_digits=7, verbose_name='1.1.Отчисления на текущий ремонт конструктивных элементов зданий - базовая ставка')),
                ('G_out_sewerage_out_cold_water_and_out_hot_water', models.DecimalField(db_column='G_out_sewerage_out_cold_water_and_out_hot_water', decimal_places=5, max_digits=7, verbose_name='1.2.Отчисления на текущий ремонт общего имущества, не находящегося на гарантийном обслуживании: \n 1.2.1. - общедомовых инженерных сетей в домах без канализации, без холодного водоснабжения и без горячего водоснабжения')),
                ('G_out_sewerage_w_cold_water_and_out_hot_water', models.DecimalField(db_column='G_out_sewerage_w_cold_water_and_out_hot_water', decimal_places=5, max_digits=7, verbose_name='1.2.2. - общедомовых инженерных сетей в домах без канализации, без горячего водоснабжения, с холодным водоснабжением')),
                ('G_w_sewerage_out_cold_water_and_out_hot_water', models.DecimalField(db_column='G_w_sewerage_out_cold_water_and_out_hot_water', decimal_places=5, max_digits=7, verbose_name='1.2.3. - общедомовых инженерных сетей в домах с канализацией, с холодным водоснабжением, без горячего водоснабжения')),
                ('G_w_sewerage_w_cold_water_and_w_hot_water', models.DecimalField(db_column='G_w_sewerage_w_cold_water_and_w_hot_water', decimal_places=5, max_digits=7, verbose_name='1.2.4. - общедомовых инженерных сетей в домах с канализацией, с холодным и горячим водоснабжением')),
                ('G_indoor_hot_water_recirculation_pumps', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='1.2.5. - внутридомовых рециркуляционных насосов горячего водоснабжения')),
                ('G_over_10_floors', models.DecimalField(db_column='G_over_10_floors', decimal_places=5, max_digits=7, verbose_name='1.2.6. - внутридомовых пожарных и пожарно-охранных сигнализаций в домах свыше 10 этажей')),
                ('G_in_house_automated_systems_for_commercial', models.DecimalField(db_column='G_in_house_automated_systems_for_commercial', decimal_places=5, max_digits=7, verbose_name='1.2.7. - внутридомовых автоматизированных систем коммерческого учета электроэнергии и (или) теплоснабжения и (или) горячего водоснабжения и (или) холодного водоснабжения')),
                ('G_up_to_5000_sq_m', models.DecimalField(db_column='G_up_to_5000_sq_m', decimal_places=5, max_digits=7, verbose_name='1.2.8. - узлов учета и (или) систем автоматического регулирования в домах площадью до 5000 кв. м')),
                ('G_metering_stations_and_or_automatic_control_systems_in_houses_with_an_area_of_over_5000_sq_m', models.DecimalField(db_column='G_over_5000_sq_m', decimal_places=5, max_digits=7, verbose_name='1.2.9. - узлов учета и (или) систем автоматического регулирования в домах площадью свыше 5000 кв. м')),
                ('G_metering_units_and_or_automatic_control_systems_in_houses_with_an_area_of_over_8000_sq_m', models.DecimalField(db_column='G_over_8000_sq_m', decimal_places=5, max_digits=7, verbose_name='1.2.10. - узлов учета и (или) систем автоматического регулирования в домах площадью свыше 8000 кв. м')),
                ('TO_common_building_engineering_networks_in_houses_without_sewerage_without_cold_water_supply_and_without_hot_water_supply', models.DecimalField(db_column='TO_out_sewerage_out_cold_water_supply_and_out_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2. Содержание общего имущества \n 2.1.\tТехническое обслуживание: \n 2.1.1.\t- общедомовых инженерных сетей в домах без канализации, без холодного водоснабжения и без горячего водоснабжения')),
                ('TO_common_building_engineering_networks_in_houses_without_sewerage_without_hot_water_supply_with_cold_water_supply', models.DecimalField(db_column='TO_out_sewerage_w_cold_water_supply_and_out_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.1.2. - общедомовых инженерных сетей в домах без канализации, без горячего водоснабжения, с холодным водоснабжением')),
                ('TO_common_building_engineering_networks_in_houses_with_sewerage_system_with_cold_water_supply_without_hot_water_supply', models.DecimalField(db_column='TO_w_sewerage_w_cold_water_supply_and_out_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.1.3. - общедомовых инженерных сетей в домах с канализацией, с холодным водоснабжением, без горячего водоснабжения')),
                ('TO_common_building_engineering_networks_in_houses_with_sewerage_with_cold_and_hot_water_supply', models.DecimalField(db_column='TO_w_sewerage_w_cold_water_supply_and_w_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.1.4. - общедомовых инженерных сетей в домах с канализацией, с холодным и горячим водоснабжением')),
                ('TO_roofs_attics_basements', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.1.5. - кровли, чердаков, подвалов')),
                ('TO_indoor_gas_equipment', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.1.6. - внутридомового газового оборудования')),
                ('TO_in_house_garbage_chutes', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.1.7. - внутридомовых мусоропроводов')),
                ('TO_indoor_boilers', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.1.8. - внутридомовых бойлеров')),
                ('TO_indoor_hot_water_recirculation_pumps', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.1.9. - внутридомовых рециркуляционных насосов горячего водоснабжения')),
                ('TO_in_house_firefighters_and_fire_and_security_alarms_in_houses_over_10_floors', models.DecimalField(db_column='TO_over_10_floors', decimal_places=5, max_digits=7, verbose_name='2.1.10. - внутридомовых пожарных и пожарно-охранных сигнализаций в домах свыше 10 этажей')),
                ('TO_in_house_automated_systems_for_commercial_metering_of_electricity_and_or_heat_supply_and_or_hot_water_supply_and_or_cold_water_supply', models.DecimalField(db_column='TO_in_house_automated_systems_for_commercial', decimal_places=5, max_digits=7, verbose_name='2.1.11. - внутридомовых автоматизированных систем коммерческого учета электроэнергии и (или) теплоснабжения и (или) горячего водоснабжения и (или) холодного водоснабжения')),
                ('TO_metering_stations_and_or_automatic_control_systems_in_houses_with_an_area_of_up_to_5000_sq_m', models.DecimalField(db_column='TO_up_to_5000_sq_m', decimal_places=5, max_digits=7, verbose_name='2.1.12.\t- узлов учета и (или) систем автоматического регулирования в домах площадью до 5000 кв. м')),
                ('TO_metering_stations_and_or_automatic_control_systems_in_houses_with_an_area_of_over_5000_sq_m', models.DecimalField(db_column='TO_over_5000_sq_m', decimal_places=5, max_digits=7, verbose_name='2.1.13. - узлов учета и (или) систем автоматического регулирования в домах площадью свыше 5000 кв. м')),
                ('TO_metering_units_and_or_automatic_control_systems_in_houses_with_an_area_of_over_8000_sq_m', models.DecimalField(db_column='TO_over_8000_sq_m', decimal_places=5, max_digits=7, verbose_name='2.1.14.\t- узлов учета и (или) систем автоматического регулирования в домах площадью свыше 8000 кв. м')),
                ('TO_technical_diagnostics_of_in_house_gas_equipment_VDGO_which_has_fulfilled_the_standard_operating_life', models.DecimalField(db_column='TO_VDGO', decimal_places=5, max_digits=7, verbose_name='2.1.15.\t- техническое диагностирование внутридомового газового оборудования (ВДГО), отработавшего нормативные сроки эксплуатации')),
                ('TS_common_building_engineering_networks_in_houses_without_sewerage_without_cold_water_supply_and_without_hot_water_supply', models.DecimalField(db_column='TS_out_sewerage_out_cold_water_supply_and_out_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.2. Технический осмотр: \n 2.2.1. - общедомовых инженерных сетей в домах без канализации, без холодного водоснабжения и без горячего водоснабжения')),
                ('TS_common_building_engineering_networks_in_houses_without_sewerage_without_hot_water_supply_with_cold_water_supply', models.DecimalField(db_column='TS_out_sewerage_w_cold_water_supply_and_out_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.2.2. - общедомовых инженерных сетей в домах без канализации, без горячего водоснабжения, с холодным водоснабжением')),
                ('TS_common_building_engineering_networks_in_houses_with_sewerage_system_with_cold_water_supply_without_hot_water_supply', models.DecimalField(db_column='TS_w_sewerage_w_cold_water_supply_and_out_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.2.3. - общедомовых инженерных сетей в домах с канализацией, с холодным водоснабжением, без горячего водоснабжения')),
                ('TS_common_building_engineering_networks_in_houses_with_sewerage_with_cold_and_hot_water_supply', models.DecimalField(db_column='TS_w_sewerage_w_cold_water_supply_and_w_hot_water_supply', decimal_places=5, max_digits=7, verbose_name='2.2.4. - общедомовых инженерных сетей в домах с канализацией, с холодным и горячим водоснабжением')),
                ('TS_roofs_attics_basements', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.2.5. - кровли, чердаков, подвалов')),
                ('TS_indoor_gas_equipment', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.2.6. - внутридомового газового оборудования')),
                ('TS_indoor_hot_water_recirculation_pumps', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.2.7. - внутридомовых рециркуляционных насосов горячего водоснабжения')),
                ('TS_in_house_automated_systems_for_commercial_metering_of_electricity_and_or_heat_supply_and_or_hot_water_supply_and_or_cold_water_supply', models.DecimalField(db_column='automated_systems', decimal_places=5, max_digits=7, verbose_name='2.2.8.\t- внутридомовых автоматизированных систем коммерческого учета электроэнергии и (или) теплоснабжения и (или) горячего водоснабжения и (или) холодного водоснабжения')),
                ('A_common_building_engineering_networks_in_houses_without_sewerage_without_cold_water_supply_and_without_hot_water_supply', models.DecimalField(db_column='A_out_s_out_cold_water_and_out_hot_water', decimal_places=5, max_digits=7, verbose_name='2.3. Аварийное обслуживание: \n 2.3.1.\t- общедомовых инженерных сетей в домах без канализации, без холодного водоснабжения и без горячего водоснабжения')),
                ('A_common_building_engineering_networks_in_houses_without_sewerage_without_hot_water_supply_with_cold_water_supply', models.DecimalField(db_column='A_out_s_out_w_water_and_out_hot_water', decimal_places=5, max_digits=7, verbose_name='2.3.2. - общедомовых инженерных сетей в домах без канализации, без горячего водоснабжения, с холодным водоснабжением')),
                ('A_common_building_engineering_networks_in_houses_with_sewerage_system_with_cold_water_supply_without_hot_water_supply', models.DecimalField(db_column='A_w_s_out_w_water_and_out_hot_water', decimal_places=5, max_digits=7, verbose_name='2.3.3. - общедомовых инженерных сетей в домах с канализацией, с холодным водоснабжением, без горячего водоснабжения')),
                ('A_common_building_engineering_networks_in_houses_with_sewerage_with_cold_and_hot_water_supply', models.DecimalField(db_column='A_w_s_out_w_water_and_w_hot_water', decimal_places=5, max_digits=7, verbose_name='2.3.4. - общедомовых инженерных сетей в домах с канализацией, с холодным и горячим водоснабжением')),
                ('A_roofs_attics_basements', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.3.5. - кровли, чердаков, подвалов')),
                ('A_indoor_gas_equipment', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.3.6. - внутридомового газового оборудования')),
                ('A_indoor_hot_water_recirculation_pumps', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.3.7. - внутридомовых рециркуляционных насосов горячего водоснабжения')),
                ('A_in_house_firefighters_and_fire_and_security_alarms_in_houses_over_10_floors', models.DecimalField(db_column='A_fire', decimal_places=5, max_digits=7, verbose_name='2.3.8. - внутридомовых пожарных и пожарно-охранных сигнализаций в домах свыше 10 этажей')),
                ('A_in_house_automated_systems_for_commercial_metering_of_electricity_and_or_heat_supply_and_or_hot_water_supply_and_or_cold_water_supply', models.DecimalField(db_column='A_automated_systems', decimal_places=5, max_digits=7, verbose_name='2.3.9. - внутридомовых автоматизированных систем коммерческого учета электроэнергии и (или) теплоснабжения и (или) горячего водоснабжения и (или) холодного водоснабжения')),
                ('cleaning_of_the_local_area', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.\tСанитарное содержание и благоустройство: \n 2.4.1. - уборка придомовой территории')),
                ('cleaning_of_yard_sanitary_installations', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.2. - уборка дворовых санитарных установок')),
                ('cleaning_staircases', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.3. - уборка лестничных клеток')),
                ('cleaning_of_elevators', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.4. - уборка лифтов')),
                ('pest_control_and_disinfestation', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.5. - дератизация и дезинсекция')),
                ('improvement_of_the_local_area_including_the_demolition_of_emergency_trees', models.DecimalField(db_column='improvement_of_the_local_area', decimal_places=5, max_digits=7, verbose_name='2.4.6. - благоустройство придомовой территории, включая снос аварийных деревьев')),
                ('maintenance_of_playgrounds_and_sports_grounds', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.7. - содержание детских и спортивных площадок')),
                ('sand_replacement_in_sandboxes', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.8. - замена песка в песочницах')),
                ('removal_of_ice_and_icicles_from_roofs', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.4.9. - удаление наледей и сосулек с крыш')),
                ('organization_and_maintenance_of_places_sites_for_the_accumulation_of_solid_municipal_waste_including_maintenance_and_cleaning', models.DecimalField(db_column='organization_and_maintenance', decimal_places=5, max_digits=7, verbose_name='2.5.\tСбор и вывоз бытовых отходов: \n 2.5.1. - организация и содержание мест (площадок) накопления твердых коммунальных отходов, включая обслуживание и очист')),
                ('removal_of_liquid_household_waste', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.5.4. - вывоз жидких бытовых отходов')),
                ('maintenance_of_local_boiler_houses', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.6.\tСодержание локальных котельных: \n 2.6.1. - техническое обслуживание локальных котельных')),
                ('current_repair_of_local_boiler_houses', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.6.2. - текущий ремонт локальных котельных')),
                ('maintenance_and_repair_of_elevators', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.7. Содержание лифтового хозяйства в домах, где все подъезды оборудованы лифтами: \n 2.7.1. - техническое обслуживание и ремонт лифтов')),
                ('maintenance_and_repair_of_dispatching_facilities', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='2.7.2. - техническое обслуживание и ремонт средств диспетчеризации')),
                ('maintenance_and_repair_of_fire_and_or_security_alarm_systems_for_elevators', models.DecimalField(db_column='maintenance_and_repair', decimal_places=5, max_digits=7, verbose_name='2.7.3. - техническое обслуживание и ремонт пожарной и (или) охранной сигнализации лифтов')),
                ('periodic_technical_inspection_of_elevators_with_electrical_measurements', models.DecimalField(db_column='periodic_technical', decimal_places=5, max_digits=7, verbose_name='2.7.4. - периодическое техническое освидетельствование лифтов с проведением электроизмерений')),
                ('expert_examination_survey_of_elevators_that_have_worked_out_the_standard_assigned_service_life', models.DecimalField(db_column='expert_examination_survey', decimal_places=5, max_digits=7, verbose_name='2.7.5. - экспертное обследование (освидетельствование) лифтов, отработавших нормативный (назначенный) срок службы')),
                ('houses_without_centralized_drainage', models.DecimalField(decimal_places=5, max_digits=7, verbose_name='3. Плата за управление многоквартирным домом: \n 3.1. - дома без централизованного водоотведения')),
                ('houses_with_centralized_drainage_without_centralized_hot_water_supply', models.DecimalField(db_column='with_centralized_drainage', decimal_places=5, max_digits=7, verbose_name='3.2. - дома с централизованным водоотведением, без централизованного горячего водоснабжения')),
                ('houses_with_centralized_sewerage_and_hot_water_supply', models.DecimalField(db_column='with_centralized_sewerage', decimal_places=5, max_digits=7, verbose_name='3.3. - дома с централизованным водоотведением и горячим водоснабжением')),
                ('houses_without_elevators_equipped_with_garbage_chutes', models.DecimalField(db_column='out_elevators_equipped_w_garbage_chutes', decimal_places=5, max_digits=7, verbose_name='3.4. - дома без лифтов, оборудованные мусоропроводами')),
                ('houses_without_elevators_equipped_with_local_boiler_houses', models.DecimalField(db_column='out_elevators_equipped_w_local_boiler', decimal_places=5, max_digits=7, verbose_name='3.5.\t- дома без лифтов, оборудованные локальными котельными')),
                ('houses_without_garbage_chutes_equipped_with_lifts', models.DecimalField(db_column='out_garbage_chutes_equipped_w_lifts', decimal_places=5, max_digits=7, verbose_name='3.6. - дома без мусоропроводов, оборудованные лифтами')),
                ('houses_equipped_with_garbage_chutes_and_elevators', models.DecimalField(db_column='equipped_w_garbage_chutes_and_elevators', decimal_places=5, max_digits=7, verbose_name='3.7. - дома, оборудованные мусоропроводами и лифтами')),
                ('houses_equipped_with_garbage_chutes_elevators_and_local_boiler_houses', models.DecimalField(db_column='equipped_w_garbage_chutes_elevators_and_local_boiler', decimal_places=5, max_digits=7, verbose_name='3.8. - дома, оборудованные мусоропроводами, лифтами и локальными котельными')),
            ],
            options={
                'verbose_name': 'Тарифы',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observing', models.CharField(max_length=30, verbose_name='Работник')),
                ('type', models.CharField(choices=[('Работник', 'Работник'), ('Оператор', 'Оператор'), ('Администратор', 'Администратор')], max_length=30, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sity', models.CharField(max_length=20, verbose_name='Город')),
                ('street', models.CharField(max_length=30, verbose_name='Улица')),
                ('house', models.CharField(max_length=5, verbose_name='Дом')),
                ('entrance', models.CharField(blank=True, max_length=3, null=True, verbose_name='Подъезд')),
                ('appartament', models.CharField(blank=True, max_length=10, null=True, verbose_name='Квартира')),
                ('applicant', models.CharField(choices=[('Оператор', 'Оператор'), ('Арендатор', 'Арендатор'), ('Госорганы', 'Госорганы'), ('Жилец', 'Жилец'), ('Наниматель', 'Наниматель'), ('Родственник собственника', 'Радственник собственника'), ('Собственник', 'Собственник'), ('Организация', 'Организация')], default='Жилец', max_length=30, verbose_name='Проживающий')),
                ('status', models.CharField(choices=[('Аварийная', 'Аварийная'), ('Плановая', 'Плановая'), ('Платная', 'Платная'), ('Консультация', 'Консультация')], default='Консультация', max_length=20, verbose_name='Статус заявки')),
                ('text', models.TextField(verbose_name='Текст заявки')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Изображение')),
                ('work', models.CharField(choices=[('Благоустройство', 'Благоустройство'), ('Вентиляция', 'Вентиляция'), ('Газовое оборудование', 'Газовое оборудование'), ('Утечка газа', 'Утечка газа'), ('Горячее водоснабжение', 'Горячее водоснабжение'), ('Запорная армаратура', 'Запорная армаратура'), ('Канализация', 'Канализация'), ('Квитанция', 'Квитанция'), ('Кровля', 'Кровля'), ('Лифт', 'Лифт'), ('Лифт(кабина)', 'Лифт(кабина)'), ('Мусоропровод', 'Мусоропровод'), ('Конструктив', 'Конструктив'), ('Отопление', 'Отопление'), ('Отчет собственникам', 'Отчет собственникам'), ('Провайдер', 'Провайдер'), ('Уборка подъезда', 'Уборка подъезда'), ('Придомовая уборка', 'Придомовая уборка'), ('Холодное водоснабжение', 'Холодное водоснабжение'), ('Электричество', 'Электричество')], default='Благоустройство', max_length=50, verbose_name='Работы/Услуги')),
                ('data', models.DateTimeField(auto_now=True, verbose_name='Дата заявки')),
                ('home_phone', models.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True, verbose_name='Домашний телефон')),
                ('mobile_phone', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='Мобильный телефон')),
                ('manage_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ManagingOrganizationRequest', to='main.managingorganization', verbose_name='Управляющая организация')),
                ('observing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.worker', verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'Заявка АДС',
                'verbose_name_plural': 'Заявки АДС',
            },
        ),
        migrations.CreateModel(
            name='AdressForTarif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sity', models.CharField(max_length=20, verbose_name='Город')),
                ('locality', models.CharField(blank=True, max_length=20, null=True, verbose_name='Населённый пункт')),
                ('street', models.CharField(max_length=30, verbose_name='Улица')),
                ('house', models.CharField(max_length=5, verbose_name='Дом')),
                ('manage_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ManagingOrganization', to='main.managingorganization', verbose_name='Управляющая организация')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
